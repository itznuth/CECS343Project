from investor import Investor
from manager import Manager
from person import Person
from customer import Customer
from facilitymaintenance import FacilityMaintenance
from financialreporting import FinancialReporting
from security import Security
from securitymanagement import SecurityManagement
from store import Store
from rentalpayment import RentalPayment
from tenant import Tenant
from visitortracking import VisitorTracking
from datamanager import DataManager

class MallManagementSystem:
    def __init__(self):
        self.stores = []
        self.investors = []
        self.customers = []
        self.managers = []
        self.maintenance_requests = []
        self.security_logs = []
        self.tenants = []
        self.rental_payments = []
        self.visitor_tracking = VisitorTracking()
        self.manager=DataManager(self.stores, self.investors, self.customers,
        self.managers, self.maintenance_requests, self.tenants, self.retal_payments)

    def run(self):
    while True:
        print("\n=== Select Data Type ===")
        print("1. Store")
        print("2. Customer")
        print("3. Investor")
        print("4. Manager")
        print("5. Tenant")
        print("6. Maintenance Request")
        print("7. Rental Payment")
        print("8. Exit")
        data_choice = input("Choose an option: ")

        if data_choice == '8':
            break

        print("\nWhat would you like to do?")
        print("1. Add")
        print("2. Delete")
        print("3. Update")
        action_choice = input("Choose an action: ")

        if data_choice == '1':
            if action_choice == '1':
                self.manager.add_store()
            elif action_choice == '2':
                self.manager.delete_store()
            elif action_choice == '3':
                self.manager.update_store()

        elif data_choice == '2':
            if action_choice == '1':
                self.manager.add_customer()
            elif action_choice == '2':
                self.manager.delete_customer()
            elif action_choice == '3':
                self.manager.update_customer()

        elif data_choice == '3':
            if action_choice == '1':
                self.manager.add_investor()
            elif action_choice == '2':
                self.manager.delete_investor()
            elif action_choice == '3':
                self.manager.update_investor()

        elif data_choice == '4':
            if action_choice == '1':
                self.manager.add_manager()
            elif action_choice == '2':
                self.manager.delete_manager()
            elif action_choice == '3':
                self.manager.update_manager()

        elif data_choice == '5':
            if action_choice == '1':
                self.manager.add_tenant()
            elif action_choice == '2':
                self.manager.delete_tenant()
            elif action_choice == '3':
                self.manager.update_tenant()

        elif data_choice == '6':
            if action_choice == '1':
                self.manager.create_maintenance_request()
            elif action_choice == '2':
                self.manager.delete_maintenance_request()
            elif action_choice == '3':
                self.manager.update_maintenance_request()

        elif data_choice == '7':
            if action_choice == '1':
                self.manager.record_rental_payment()
            elif action_choice == '2':
                self.manager.delete_rental_payment()
            elif action_choice == '3':
                self.manager.update_rental_payment()

        else:
            print("Invalid selection.")

    def log_security_incident(self):
        print("\nLog Security Incident")
        location = input("Enter incident location: ")
        details = input("Enter incident details: ")
        security = SecurityManagement(location)
        security.log_incident(details)
        self.security_logs.append(security)
        print("Incident logged successfully!")

    def generate_financial_report(self):
        print("\nGenerate Financial Report")
        revenue = float(input("Enter total revenue: "))
        sales = float(input("Enter total sales: "))
        date = input("Enter report date (YYYY-MM-DD): ")
        report = FinancialReporting(revenue, sales, date)
        print(f"\nFinancial Report for {date}")
        print(f"Total Revenue: ${report.get_revenue():,.2f}")
        print(f"Total Sales: ${report.get_sales():,.2f}")
        
    def track_visitor(self):
        print("\nVisitor Tracking")
        action = input("(I)ncrement or (D)ecrement visitor count? ").upper()
        if action == "I":
            time = input("Enter entry time (HH:MM): ")
            self.visitor_tracking.increment_visitor_count(time)
            print("Visitor count incremented.")
        elif action == "D":
            self.visitor_tracking.decrement_visitor_count()
            print("Visitor count decremented.")
        else:
            print("Invalid choice.")
        print(f"Current visitor count: {self.visitor_tracking.get_total_visitors()}")
